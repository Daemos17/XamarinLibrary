

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------


namespace datamodel
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class Entities2 : DbContext
{
    public Entities2()
        : base("name=Entities2")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AccountLogin> AccountLogins { get; set; }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Author> Authors { get; set; }

    public virtual DbSet<Book> Books { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<Teacher> Teachers { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<vAccount> vAccounts { get; set; }

    public virtual DbSet<vStudent> vStudents { get; set; }

    public virtual DbSet<Maker> Makers { get; set; }

    public virtual DbSet<vTeacher> vTeachers { get; set; }


    public virtual int EditUser(Nullable<int> id, string firstname, string lastname, string secondname, string login, string email, string phone)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var firstnameParameter = firstname != null ?
            new ObjectParameter("Firstname", firstname) :
            new ObjectParameter("Firstname", typeof(string));


        var lastnameParameter = lastname != null ?
            new ObjectParameter("Lastname", lastname) :
            new ObjectParameter("Lastname", typeof(string));


        var secondnameParameter = secondname != null ?
            new ObjectParameter("Secondname", secondname) :
            new ObjectParameter("Secondname", typeof(string));


        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditUser", idParameter, firstnameParameter, lastnameParameter, secondnameParameter, loginParameter, emailParameter, phoneParameter);
    }


    public virtual int DeleteAccount(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAccount", idParameter);
    }


    public virtual int SetLoginDateTime(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetLoginDateTime", idParameter);
    }


    public virtual int SetLogOutDateTime(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetLogOutDateTime", idParameter);
    }

}

}

